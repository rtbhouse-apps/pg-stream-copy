language: python
python: "3.8"

pytest: &pytest
  stage: test
  services:
    - postgresql
  addons:
    postgresql: $PG_VERSION
  before_install:
    - sudo apt-get update
    - sudo apt-get --yes remove postgresql\*
    - sudo apt-get install -y postgresql-${PG_VERSION} postgresql-client-${PG_VERSION}
    - sudo cp /etc/postgresql/{9.6,$PG_VERSION}/main/pg_hba.conf
    - sudo service postgresql restart $PG_VERSION
  install:
    - pip install .[dev,e2e,ci]
  before_script:
    - psql -c 'CREATE DATABASE e2e_db;' -U postgres
  script: pytest --cov=pg_stream_copy tests/

pytest_pg10: &pytest_pg10
  stage: test
  services:
    - postgresql
  addons:
    postgresql: "10"
    apt:
      packages:
      - postgresql-10
      - postgresql-client-10
  install:
    - pip install .[dev,e2e,ci]
  before_script:
    - psql -c 'CREATE DATABASE e2e_db;' -U postgres
  script: pytest --cov=pg_stream_copy tests/

linters: &linters
  stage: linters
  install:
    - pip install .[dev]
  script: mypy . && pyflakes .

jobs:
  include:
    - <<: *pytest_pg10
      python: "3.7"
      env: PG_VERSION=10
    - <<: *pytest_pg10
      python: "3.8"
      env: PG_VERSION=10
    - <<: *pytest
      python: "3.7"
      env: PG_VERSION=11
    - <<: *pytest
      python: "3.7"
      env: PG_VERSION=12
    - <<: *pytest
      python: "3.8"
      env: PG_VERSION=11
    - <<: *pytest
      python: "3.8"
      env: PG_VERSION=12
      after_success:
        - codecov

    - <<: *linters
      python: "3.7"
    - <<: *linters
      python: "3.8"

    - stage: deploy
      script: skip
      deploy:
        provider: pypi
        user: __token__
        password:
          secure: "qWtIFDsLZ2Z83FKd2pvO7ugUYZ/YDwSz+2sxSbAXOdwwga7eNby12B0x2CNhVJfkUWecXGaFPar/zyQvPLHCqqdI7ef+kJMJnVsD4zMROZFCOfrPFDgBGq6Yh4w6xicrVRtBLaNnYb4hOwSK/VzuF0gQSiqFXnjxSils28DoOGvPweql4XePRKu8JH79S35ieFGaIdEgK9LJsWSqaCICbe6TSf5/aymXxjiCNlevujFDf2J0FQgn/2a3sfVJqOZsvMRaGd4T166XrpFkG6c9xGqt97KPnV/U8GHWO+uZv9sP4G2m9iAMiQKBCjUJBmTH2YnilFK/U9E2pHx/I5FrMu/8t6U5xpzJPuatTmWYw+Q+89SOoeR10MwinoiKWLyor4chY6Fu5GPVZvYQb7mZpyL4GGSQTHrCiefpreTYqix3/rCrNOoxqiyD75ec2Hru7N9T8wkwxno/ZGgQUjYdcoPLFDDe01p+VnZ3Wiop9fjAko5cFgYtz8LKC6W60nR9brvnEwiKMcNvW8m/I7xaJe4fO/nnF7oPU7+d1Iwl0airFd/Qhd3LEdZL9MxL75VRMGY4Qv6C5KVaADflBZpBs/oKDEenifrtq93KqAibvJy8lQxe/zHmZCJJgUwHHb08+Fs8N1O0yT9ZvXDqBolzEXcDMi1W0Vo0vuXV7pKkWLs="
        on:
          tags: true