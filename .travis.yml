language: python
python: "3.8"

pytest: &pytest
  stage: test
  services:
    - postgresql
  addons:
    postgresql: $PG_VERSION
  before_install:
    - sudo apt-get update
    - sudo apt-get --yes remove postgresql\*
    - sudo apt-get install -y postgresql-${PG_VERSION} postgresql-client-${PG_VERSION}
    - sudo cp /etc/postgresql/{9.6,$PG_VERSION}/main/pg_hba.conf
    - sudo service postgresql restart $PG_VERSION
  install:
    - pip install .[dev,e2e,ci]
  before_script:
    - psql -c 'CREATE DATABASE e2e_db;' -U postgres
  script: pytest --cov=pg_stream_copy tests/

pytest_pg10: &pytest_pg10
  stage: test
  services:
    - postgresql
  addons:
    postgresql: "10"
    apt:
      packages:
      - postgresql-10
      - postgresql-client-10
  install:
    - pip install .[dev,e2e,ci]
  before_script:
    - psql -c 'CREATE DATABASE e2e_db;' -U postgres
  script: pytest --cov=pg_stream_copy tests/

linters: &linters
  stage: linters
  install:
    - pip install .[dev]
  script: mypy . && pyflakes .

jobs:
  include:
    - <<: *pytest_pg10
      python: "3.7"
      env: PG_VERSION=10
    - <<: *pytest_pg10
      python: "3.8"
      env: PG_VERSION=10
    - <<: *pytest
      python: "3.7"
      env: PG_VERSION=11
    - <<: *pytest
      python: "3.7"
      env: PG_VERSION=12
    - <<: *pytest
      python: "3.8"
      env: PG_VERSION=11
    - <<: *pytest
      python: "3.8"
      env: PG_VERSION=12
      after_success:
        - codecov

    - <<: *linters
      python: "3.7"
    - <<: *linters
      python: "3.8"

    - stage: deploy
      script: skip
      deploy:
        provider: pypi
        user: __token__
        password:
          secure: "avofCVRH1MV01ouo1lxSxHSdPZ++dm2JPg+XFI1LL2FhuKkkN77XODqNj6A1YWX8R24OIkSMP92lEBBPZmRNQRFyEl+dfHfYnVcVf0Kd4pwGl70I4jsIf2gYmCxyBN9i1xj7ptg0RYE3AV+zbo9VqPMn3MTmIQhhhA3lHcujpBFqM6JelszxXRearnQlrwZgUPRv5yZYVpj8L368Yngup2Zas1IyvmB6pMYwcDpA1C0Kd4hL4GSw/ijZdOjXtDaCsGzuLu6DnZfD+jgqDpFKqyNxATsv2MiROnMTQv91UJi3F8weVkNecmlGOz9+TOxkwkiexa/X93XCf8QmUOa5VZG/7rgNMGlgdQVa6Bqf5PcWbKrQlttbKKuGO4zHNqcQEh0lfXVVtTWMT73BZ2bdvVfpYFZEh3GpbrKxKg8qxmis+TTsS4QcgcM7hrWqL9BGtk/D4ReU/U/iW76kJ+/rtS2hlOUbWrckCCY6j4EbnVldQl0LQ2LChPiXE/1nbvQur7Ae2U4fjCSTkSLvfWeorDr5TFKpujNYR+WkMdp8jWq1w1oR1TcFeJMfcGA5mcGx/Lkl4UHEAjnY681CAy24dDEE4i8/6PVtZkhcSY+vhvZ+d53EX1I0wXQBwG05PnDfKb9bBUQcI8yX9Rpm+V4lyKKUFkZXz4HmAak7jHL5xxY="
        on:
          tags: true