[tool.poetry]
name = "pg-stream-copy"
version = "3.0.0"
description = "RTB House apps pg_stream_copy"
authors = ["RTB House Apps Team <apps@rtbhouse.com>"]
license = "MIT License"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[tool.poetry.dependencies]
python = ">=3.9, <4.0"

[tool.poetry.group.dev.dependencies]
psycopg2-binary = "^2.9.3"
types-psycopg2 = "^2.9.19"

black = "^25.0.0"
flake8 = "^7.0.0"
isort = "^6.0.0"
mypy = "^1.0"
pylint = "^3.0.0"

pytest = "^8.0.0"
pytest-cov = "^6.0.0"
pytest-mock = "^3.10.0"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312", "py313"]

[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true

[tool.isort]
line_length = 120
profile = "black"

[tool.mypy]
python_version = "3.9"
strict = true

[tool.pylint.main]
py-version = "3.9"
load-plugins = """
    pylint.extensions.check_elif,
    pylint.extensions.confusing_elif,
    pylint.extensions.consider_ternary_expression,
    pylint.extensions.empty_comment,
    pylint.extensions.eq_without_hash,
    pylint.extensions.for_any_all,
    pylint.extensions.redefined_loop_name,
    pylint.extensions.redefined_variable_type,
    pylint.extensions.set_membership,
    pylint.extensions.typing,
"""
extension-pkg-whitelist = "psycopg2"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.message_control]
enable = "all"
disable = """
    broad-except,
    broad-exception-raised,
    duplicate-code,
    missing-class-docstring,
    missing-function-docstring,
    missing-module-docstring,
    no-else-return,
"""

[tool.pytest.ini_options]
addopts = "--cov=pg_stream_copy/ --cov-report=term"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
